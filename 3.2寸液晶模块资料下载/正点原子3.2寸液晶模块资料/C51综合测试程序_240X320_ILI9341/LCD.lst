C51 COMPILER V9.53.0.0   LCD                                                               11/30/2014 00:41:29 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\obj\LCD.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE LCD\LCD.c LARGE BROWSE INCDIR(.\font;.\LCD;.\sys;.\touch;.\GUI;.\USER) D
                    -EBUG OBJECTEXTEND PRINT(.\LCD.lst) TABS(2) OBJECT(.\obj\LCD.obj)

line level    source

   1          #include "sys.h"
   2          #include "lcd.h"
   3          //////////////////////////////////////////////////////////////////////////////////   
   4          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   5          //测试硬件：单片机STC12LE5A60S2,晶振30M  单片机工作电压3.3V
   6          //QDtech-TFT液晶驱动 for C51
   7          //xiao冯@ShenZhen QDtech co.,LTD
   8          //公司网站:www.qdtech.net
   9          //淘宝网站：http://qdtech.taobao.com
  10          //我司提供技术支持，任何技术问题欢迎随时交流学习
  11          //固话(传真) :+86 0755-23594567 
  12          //手机:15989313508（冯工） 
  13          //邮箱:QDtech2008@gmail.com 
  14          //Skype:QDtech2008
  15          //技术交流QQ群:324828016
  16          //创建日期:2013/5/13
  17          //版本：V1.1
  18          //版权所有，盗版必究。
  19          //Copyright(C) 深圳市全动电子技术有限公司 2009-2019
  20          //All rights reserved
  21          //********************************************************************************
  22          
  23          /**************************************************************************************
  24          //=======================================液晶屏数据线接线==========================================//
  25          //P2组高8位数据口,DB8-DB15依次连接P2^0-P2^7;8位模式下只使用高8位
  26          #define  LCD_DataPortH P2 
  27          //P0组低8位数据口,DB0-DB7依次连接P0^0-P0^7;请确认P0口已经上拉10K电阻,不宜太小，最小4.7K,推荐10K.    
  28          #define  LCD_DataPortL P0     
  29          //=======================================液晶屏控制线接线==========================================//
  30          CS=P1^3;    //片选  
  31          RS=P1^2;      //数据/命令切换
  32          WR=P1^1;    //写控制
  33          RD=P1^0;    //读控制
  34          RESET=P3^3;   //复位 
  35          LCD_BL=P3^2;  //背光控制
  36          //=========================================触摸屏触接线=========================================//
  37          //不使用触摸或者模块本身不带触摸，则可不连接
  38          DCLK    =    P3^6; //触摸屏SPI总线时钟信号接P3.6  
  39          TCS       =    P3^7; //触摸片选TCS接P3.7
  40          DIN       =    P3^4; //MOSI接P3.4 
  41          DOUT      =    P3^5; //MISO接P3.5                                              
  42          Penirq    =    P4^0; //PEN引脚接P4.0，如单片机无P4组，请自行更改其他可用IO并修改代码定义
  43          **************************************************************************************************/ 
  44          
  45          //LCD的画笔颜色和背景色    
  46          u16 POINT_COLOR=0x0000; //画笔颜色
  47          u16 BACK_COLOR=0xFFFF;  //背景色 
  48          //管理LCD重要参数
  49          //默认为竖屏
  50          _lcd_dev lcddev;
  51          
  52          
  53          
  54          //******************************************************************
C51 COMPILER V9.53.0.0   LCD                                                               11/30/2014 00:41:29 PAGE 2   

  55          //函数名：  LCD_Write_Bus
  56          //作者：    xiao冯@全动电子
  57          //日期：    2013-02-22
  58          //功能：    向液晶屏总线写入数据(LCD驱动内部函数)
  59          //输入参数：VH:高8位数据
  60          //          VL:低8位数据
  61          //返回值：  无
  62          //修改记录：无
  63          //******************************************************************
  64          #if LCD_USE8BIT_MODEL==1 //8位并行数据写入时序 
              void LCD_Write_Bus(char VH,char VL)  
              { 
                LCD_CS=0;
                LCD_DataPortH=VH; 
                LCD_WR=0;
                LCD_WR=1;
                LCD_CS=1;
              }
              #else //16位并行数据写入时序  
  74          void LCD_Write_Bus(char VH,char VL)   
  75          {
  76   1        LCD_CS=0; 
  77   1        LCD_DataPortH=VH; 
  78   1        LCD_DataPortL=VL;   
  79   1        LCD_WR=0;
  80   1        LCD_WR=1; 
  81   1        LCD_CS=1;
  82   1      }
  83          
  84          #endif
  85          
  86            
  87          //******************************************************************
  88          //函数名：  LCD_WR_DATA8
  89          //作者：    xiao冯@全动电子
  90          //日期：    2013-02-22
  91          //功能：    向液晶屏总线写入写8位数据
  92          //输入参数：VH:高8位数据
  93          //          VL:低8位数据
  94          //返回值：  无
  95          //修改记录：无
  96          //******************************************************************
  97          void LCD_WR_DATA8(char VH,char VL) 
  98          {
  99   1        LCD_RS=1;
 100   1        LCD_Write_Bus(VH,VL);
 101   1      } 
 102          
 103          //******************************************************************
 104          //函数名：  LCD_WR_REG
 105          //作者：    xiao冯@全动电子
 106          //日期：    2013-02-22
 107          //功能：    向液晶屏总线写入写16位指令
 108          //输入参数：Reg:待写入的指令值
 109          //返回值：  无
 110          //修改记录：无
 111          //******************************************************************
 112          void LCD_WR_REG(int Reg)   
 113          { 
 114   1        LCD_RS=0;
 115   1        LCD_Write_Bus(Reg>>8,Reg);
 116   1      } 
C51 COMPILER V9.53.0.0   LCD                                                               11/30/2014 00:41:29 PAGE 3   

 117          
 118          //******************************************************************
 119          //函数名：  LCD_WR_DATA
 120          //作者：    xiao冯@全动电子
 121          //日期：    2013-02-22
 122          //功能：    向液晶屏总线写入写16位数据
 123          //输入参数：Data:待写入的数据
 124          //返回值：  无
 125          //修改记录：无
 126          //******************************************************************
 127           void LCD_WR_DATA(int Data)
 128          {
 129   1        LCD_RS=1;
 130   1        LCD_Write_Bus(Data>>8,Data);
 131   1      }
 132          
 133          //******************************************************************
 134          //函数名：  LCD_WriteReg
 135          //作者：    xiao冯@全动电子
 136          //日期：    2013-02-22
 137          //功能：    写寄存器数据
 138          //输入参数：LCD_Reg:寄存器地址
 139          //      LCD_RegValue:要写入的数据
 140          //返回值：  无
 141          //修改记录：无
 142          //******************************************************************
 143          void LCD_WriteReg(u16 LCD_Reg, u16 LCD_RegValue)
 144          {
 145   1        LCD_WR_REG(LCD_Reg);
 146   1        LCD_WR_DATA(LCD_RegValue);
 147   1      }
 148          
 149          //******************************************************************
 150          //函数名：  LCD_WriteRAM_Prepare
 151          //作者：    xiao冯@全动电子
 152          //日期：    2013-02-22
 153          //功能：    开始写GRAM
 154          //      在给液晶屏传送RGB数据前，应该发送写GRAM指令
 155          //输入参数：无
 156          //返回值：  无
 157          //修改记录：无
 158          //******************************************************************
 159          void LCD_WriteRAM_Prepare(void)
 160          {
 161   1        LCD_WR_REG(lcddev.wramcmd);   
 162   1      }
 163          
 164          
 165          //******************************************************************
 166          //函数名：  LCD_Clear
 167          //作者：    xiao冯@全动电子
 168          //日期：    2013-02-22
 169          //功能：    LCD全屏填充清屏函数
 170          //输入参数：Color:要清屏的填充色
 171          //返回值：  无
 172          //修改记录：无
 173          //******************************************************************
 174          void LCD_Clear(u16 Color)
 175          {
 176   1        u16 i,j;
 177   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1); 
 178   1          for(i=0;i<lcddev.width;i++)
C51 COMPILER V9.53.0.0   LCD                                                               11/30/2014 00:41:29 PAGE 4   

 179   1         {
 180   2          for (j=0;j<lcddev.height;j++)
 181   2            {
 182   3                 LCD_WR_DATA(Color);
 183   3            }
 184   2      
 185   2          }
 186   1      }
 187          
 188          //******************************************************************
 189          //函数名：  LCD_DrawPoint
 190          //作者：    xiao冯@全动电子
 191          //日期：    2013-02-22
 192          //功能：    在指定位置写入一个像素点数据
 193          //输入参数：(x,y):光标坐标
 194          //返回值：  无
 195          //修改记录：无
 196          //******************************************************************
 197          void LCD_DrawPoint(u16 x,u16 y)
 198          {
 199   1        LCD_SetWindows(x,y,x,y);//设置光标位置 
 200   1        LCD_WR_DATA(POINT_COLOR);       
 201   1      }    
 202          
 203          //******************************************************************
 204          //函数名：  LCD_Reset
 205          //作者：    xiao冯@全动电子
 206          //日期：    2013-02-22
 207          //功能：    LCD复位函数，液晶初始化前要调用此函数
 208          //输入参数：无
 209          //返回值：  无
 210          //修改记录：无
 211          //******************************************************************
 212          void LCD_Reset(void)
 213          {
 214   1        LCD_RESET=1;
 215   1        delay_ms(50); 
 216   1        LCD_RESET=0;
 217   1        delay_ms(50);
 218   1        LCD_RESET=1;
 219   1        delay_ms(50);
 220   1      }
 221          
 222          //******************************************************************
 223          //函数名：  LCD_Init
 224          //作者：    xiao冯@全动电子
 225          //日期：    2013-02-22
 226          //功能：    LCD初始化
 227          //输入参数：无
 228          //返回值：  无
 229          //修改记录：无
 230          //******************************************************************
 231          void LCD_Init(void)
 232          {
 233   1        LCD_Reset(); //初始化之前复位
 234   1        LCD_RD=1;  //RD引脚没有用到，拉高处理
 235   1      
 236   1        //=========================液晶屏初始化=============================//
 237   1        LCD_WR_REG(0xCF);  
 238   1        LCD_WR_DATA(0x00); 
 239   1        LCD_WR_DATA(0xC1); 
 240   1        LCD_WR_DATA(0X30); 
C51 COMPILER V9.53.0.0   LCD                                                               11/30/2014 00:41:29 PAGE 5   

 241   1        LCD_WR_REG(0xED);  
 242   1        LCD_WR_DATA(0x64); 
 243   1        LCD_WR_DATA(0x03); 
 244   1        LCD_WR_DATA(0X12); 
 245   1        LCD_WR_DATA(0X81); 
 246   1        LCD_WR_REG(0xE8);  
 247   1        LCD_WR_DATA(0x85); 
 248   1        LCD_WR_DATA(0x10); 
 249   1        LCD_WR_DATA(0x7A); 
 250   1        LCD_WR_REG(0xCB);  
 251   1        LCD_WR_DATA(0x39); 
 252   1        LCD_WR_DATA(0x2C); 
 253   1        LCD_WR_DATA(0x00); 
 254   1        LCD_WR_DATA(0x34); 
 255   1        LCD_WR_DATA(0x02); 
 256   1        LCD_WR_REG(0xF7);  
 257   1        LCD_WR_DATA(0x20); 
 258   1        LCD_WR_REG(0xEA);  
 259   1        LCD_WR_DATA(0x00); 
 260   1        LCD_WR_DATA(0x00); 
 261   1        LCD_WR_REG(0xC0);    //Power control 
 262   1        LCD_WR_DATA(0x1B);   //VRH[5:0] 
 263   1        LCD_WR_REG(0xC1);    //Power control 
 264   1        LCD_WR_DATA(0x01);   //SAP[2:0];BT[3:0] 
 265   1        LCD_WR_REG(0xC5);    //VCM control 
 266   1        LCD_WR_DATA(0x30);   //3F
 267   1        LCD_WR_DATA(0x30);   //3C
 268   1        LCD_WR_REG(0xC7);    //VCM control2 
 269   1        LCD_WR_DATA(0XB7); 
 270   1        LCD_WR_REG(0x36);    // Memory Access Control 
 271   1        LCD_WR_DATA(0x48); 
 272   1        LCD_WR_REG(0x3A);   
 273   1        LCD_WR_DATA(0x55); 
 274   1        LCD_WR_REG(0xB1);   
 275   1        LCD_WR_DATA(0x00);   
 276   1        LCD_WR_DATA(0x1A); 
 277   1        LCD_WR_REG(0xB6);    // Display Function Control 
 278   1        LCD_WR_DATA(0x0A); 
 279   1        LCD_WR_DATA(0xA2); 
 280   1        LCD_WR_REG(0xF2);    // 3Gamma Function Disable 
 281   1        LCD_WR_DATA(0x00); 
 282   1        LCD_WR_REG(0x26);    //Gamma curve selected 
 283   1        LCD_WR_DATA(0x01); 
 284   1        LCD_WR_REG(0xE0);    //Set Gamma 
 285   1        LCD_WR_DATA(0x0F); 
 286   1        LCD_WR_DATA(0x2A); 
 287   1        LCD_WR_DATA(0x28); 
 288   1        LCD_WR_DATA(0x08); 
 289   1        LCD_WR_DATA(0x0E); 
 290   1        LCD_WR_DATA(0x08); 
 291   1        LCD_WR_DATA(0x54); 
 292   1        LCD_WR_DATA(0XA9); 
 293   1        LCD_WR_DATA(0x43); 
 294   1        LCD_WR_DATA(0x0A); 
 295   1        LCD_WR_DATA(0x0F); 
 296   1        LCD_WR_DATA(0x00); 
 297   1        LCD_WR_DATA(0x00); 
 298   1        LCD_WR_DATA(0x00); 
 299   1        LCD_WR_DATA(0x00);     
 300   1        LCD_WR_REG(0XE1);    //Set Gamma 
 301   1        LCD_WR_DATA(0x00); 
 302   1        LCD_WR_DATA(0x15); 
C51 COMPILER V9.53.0.0   LCD                                                               11/30/2014 00:41:29 PAGE 6   

 303   1        LCD_WR_DATA(0x17); 
 304   1        LCD_WR_DATA(0x07); 
 305   1        LCD_WR_DATA(0x11); 
 306   1        LCD_WR_DATA(0x06); 
 307   1        LCD_WR_DATA(0x2B); 
 308   1        LCD_WR_DATA(0x56); 
 309   1        LCD_WR_DATA(0x3C); 
 310   1        LCD_WR_DATA(0x05); 
 311   1        LCD_WR_DATA(0x10); 
 312   1        LCD_WR_DATA(0x0F); 
 313   1        LCD_WR_DATA(0x3F); 
 314   1        LCD_WR_DATA(0x3F); 
 315   1        LCD_WR_DATA(0x0F); 
 316   1        LCD_WR_REG(0x2B); 
 317   1        LCD_WR_DATA(0x00);
 318   1        LCD_WR_DATA(0x00);
 319   1        LCD_WR_DATA(0x01);
 320   1        LCD_WR_DATA(0x3f);
 321   1        LCD_WR_REG(0x2A); 
 322   1        LCD_WR_DATA(0x00);
 323   1        LCD_WR_DATA(0x00);
 324   1        LCD_WR_DATA(0x00);
 325   1        LCD_WR_DATA(0xef);   
 326   1        LCD_WR_REG(0x11); //Exit Sleep
 327   1        delay_ms(120);
 328   1        LCD_WR_REG(0x29); //display on 
 329   1      
 330   1        //设置LCD属性参数
 331   1        LCD_SetParam();//设置LCD参数   
 332   1        LCD_BL=1;//点亮背光  
 333   1      }
 334          /*************************************************
 335          函数名：LCD_SetWindows
 336          功能：设置lcd显示窗口，在此区域写点数据自动换行
 337          入口参数：xy起点和终点
 338          返回值：无
 339          *************************************************/
 340          void LCD_SetWindows(u16 xStar, u16 yStar,u16 xEnd,u16 yEnd)
 341          { 
 342   1        LCD_WR_REG(lcddev.setxcmd); 
 343   1        LCD_WR_DATA(xStar>>8);
 344   1        LCD_WR_DATA(0x00FF&xStar);    
 345   1        LCD_WR_DATA(xEnd>>8);
 346   1        LCD_WR_DATA(0x00FF&xEnd);
 347   1      
 348   1        LCD_WR_REG(lcddev.setycmd); 
 349   1        LCD_WR_DATA(yStar>>8);
 350   1        LCD_WR_DATA(0x00FF&yStar);    
 351   1        LCD_WR_DATA(yEnd>>8);
 352   1        LCD_WR_DATA(0x00FF&yEnd); 
 353   1      
 354   1        LCD_WriteRAM_Prepare(); //开始写入GRAM        
 355   1      }   
 356          
 357          /*************************************************
 358          函数名：LCD_SetCursor
 359          功能：设置光标位置
 360          入口参数：xy坐标
 361          返回值：无
 362          *************************************************/
 363          void LCD_SetCursor(u16 Xpos, u16 Ypos)
 364          {               
C51 COMPILER V9.53.0.0   LCD                                                               11/30/2014 00:41:29 PAGE 7   

 365   1        LCD_WR_REG(lcddev.setxcmd); 
 366   1        LCD_WR_DATA(Xpos>>8);
 367   1        LCD_WR_DATA(0x00FF&Xpos);   
 368   1      
 369   1        
 370   1        LCD_WR_REG(lcddev.setycmd); 
 371   1        LCD_WR_DATA(Ypos>>8);
 372   1        LCD_WR_DATA(0x00FF&Ypos);   
 373   1      
 374   1        LCD_WriteRAM_Prepare(); //开始写入GRAM  
 375   1      } 
 376          
 377          //设置LCD参数
 378          //方便进行横竖屏模式切换
 379          void LCD_SetParam(void)
 380          {   
 381   1        lcddev.wramcmd=0x2C;
 382   1      #if USE_HORIZONTAL==1 //使用横屏    
 383   1        lcddev.dir=1;//横屏
 384   1        lcddev.width=320;
 385   1        lcddev.height=240;
 386   1        lcddev.setxcmd=0x2A;
 387   1        lcddev.setycmd=0x2B;      
 388   1        LCD_WriteReg(0x36,0x6C);
 389   1      
 390   1      #else//竖屏
                lcddev.dir=0;//竖屏             
                lcddev.width=240;
                lcddev.height=320;
                lcddev.setxcmd=0x2A;
                lcddev.setycmd=0x2B;  
                LCD_WriteReg(0x36,0x0A);
              #endif
 398   1      }
 399          
 400          
 401          
 402          
 403          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    901    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
